# a Subquery is a SELECT statement nested within another query 
# A Subquery returns an output that is used by the 'outer query'

##Example:
SELECT order_id, order_date, Customer_id
FROM Sales.orders
WHERE Customer_id IN ( Select Customer_id
              FROM sales.customers WHERE City = 'Manchester')   ## () the subquery here generates a small table of 
                                                                    custmomer IDs which are = to manchester
#Could use a join but this is easier to use and quicker - joining large tables can take alot more processing 

SELECT *
FROM customers
WHERE customer_id IN
(SELECT customer_id          #Sunqueries can only have 1 coloumn and work faster then joins 
FROM customer_orders
Where tip > 1 ) 

SELECT customer_name, customer_id
FROM customers
WHERE customer_id 
IN (SELECT customer_id               # Can also use NOT IN to look for values that are in one table but missing from another
       FROM orders 
       WHERE order_amount > 1000);


##Example - we want to find largest order from shipper id = 1 so,

SELECT MAX(quantity * unit_price) as total_order_price
FROM ordered_items
WHERE shipper_id = 1

#This will  be our subquery - we now want to find orders that are larger than our biggest order from shipperid 1 

SELECT shipper_id, order_id, Quantity, unit_price, (quantity * unit_price) as total_order_price
FROM bakery.ordered_items
WHERE (quantity * unit_price) > (SELECT MAX(quantity * unit_price) as total_order_price
        FROM bakery.ordered_items
        WHERE shipper_id = 1)

#now we can use ALL instead of max which will compare (quantity * unit_price) for all values of shipper id =1 

SELECT shipper_id, order_id, Quantity, unit_price, (quantity * unit_price) as total_order_price
FROM bakery.ordered_items
WHERE (quantity * unit_price) > ALL (SELECT (quantity * unit_price) as total_order_price
        FROM bakery.ordered_items
        WHERE shipper_id = 1)

#both queries produce the same output 

SELECT shipper_id, order_id, Quantity, unit_price, (quantity * unit_price) as total_order_price
FROM bakery.ordered_items
WHERE (quantity * unit_price) > ANY (SELECT (quantity * unit_price) as total_order_price
        FROM bakery.ordered_items
        WHERE shipper_id = 1)
# With ANY it checks whether quantitiy*unit price is bigger than any of the orders from shipperid=1 so the output is all 



